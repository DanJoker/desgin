单例模式
定义：确保(如何确保？通过构造器私有化防止他类进行实例化)一个类只有一个实例而且自行实例化并向整个系统提供这个实例
优点：
	1、减少内存开支，针对一个对象需要频繁的创建销毁，而且创建和销毁的性能又无法进一步优化的时候，单例模式的效果将会比较明显
	2、实例化对象需要很多资源的情况下，使用单例模式可以减少对象创建时的性能开销
	3、可以避免对资源的多重占用，比如写文件，避免同时对一个文件进行写操作
	4、单利模式可以在系统设置全局的访问点，优化和共享资源访问
缺点：
	1、单利模式没有接口，扩展很困难，
	2、对测试不利，没有办法通过mock方法虚拟化一个对象，如果是接口可以通过mock虚拟化一个对象进行单元测试
	3、与单一职责原则又冲突，一个类应该只一个逻辑，而不关心它是否是单例的
使用场景：
	1、要求生成唯一序列号的环境
	2、整个项目中需要一个共享访问点或者共享数据
	3、创建一个对象需要消耗的资源过多，例如访问IO，读取配置，数据库资源等。


实现单例模式的不同方法
1、饿汉模式  （静态常量）
2、饿汉模式（静态块）
3、饱汉模式（线程不安全）
4、饱汉模式（线程安全 synchronized进行同步）
5、静态内部类
6、枚举
7、双重校验
